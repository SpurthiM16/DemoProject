pipeline {
  agent any  
  stages {
    stage('Clone Git Repository') {
      steps {
        git url: 'https://github.com/SpurthiM16/DemoProject.git'
      }
    }
    stage('Run Terraform') {
    def awsSharedCredentialsFile = credentials('AWS_SHARED_CREDENTIALS_FILE')
	def awsProfile = credentials('AWS_PROFILE')

	environment {
    AWS_SHARED_CREDENTIALS_FILE = "${awsSharedCredentialsFile}"
    env.AWS_PROFILE = "${awsProfile}"
				}

      }
      steps {
        script {
          echo "checking"
          if (isUnix()) {
            sh 'terraform init'
            sh 'terraform apply -auto-approve'
          } else {
            bat 'echo "Running on Windows"'
            bat 'terraform init'
            bat 'terraform apply -auto-approve'
          }
        }
      }
    }
    stage('Deploy Web App') {
      steps {
        script {
          ec2_instance_ip = bat(returnStdout: true, script: 'terraform output ec2_instance_ip').trim()
        }
        bat "scp -i C:/Spurthi/Exp/Linuxpemkey.pem -o StrictHostKeyChecking=no Welcome.sh ec2_user@${ec2_instance_ip}:~"
        bat "ssh -i C:/Spurthi/Exp/Linuxpemkey.pem -o StrictHostKeyChecking=no ec2_user@${ec2_instance_ip} './Welcome.sh'"
      }
    }
  }
